{"name": "test_verify_product_review[chrome-test@email.com-admin-1/1/2017-11/15/2021]", "status": "failed", "statusDetails": {"message": "AssertionError: Title of the page does not match", "trace": "self = <Test_Cases.test_verify_product_review.TestVerifyProductReview object at 0x0000017B59F0F310>\nemail = 'test@email.com', password = 'admin', created_from_date = '1/1/2017'\ncreated_to_date = '11/15/2021'\n\n    @pytest.mark.parametrize(\"email, password, created_from_date, created_to_date\", get_data(\"sheet_name\"))\n    def test_verify_product_review(self, email, password, created_from_date, created_to_date):\n        login = LoginPage(self.driver)\n>       login.perform_login(email, password).navigate_product_review().search_reviews_input(created_from_date,\n                                                                                            created_to_date)\n\nTest_Cases\\test_verify_product_review.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\Login_Page.py:14: in perform_login\n    self.verify_title(\"home_page_title\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.Login_Page.LoginPage object at 0x0000017B5A037640>\ntitle = 'home_page_title'\n\n    def verify_title(self, title):\n        page_title = configuration_reader(\"page titles\", title)\n>       assert page_title in self.driver.title, \"Title of the page does not match\"\nE       AssertionError: Title of the page does not match\n\nPages\\Base_Page.py:72: AssertionError"}, "attachments": [{"name": "log", "source": "cb18e464-83fe-4b2b-a6ba-c15c7369a3be-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_browser", "value": "'chrome'"}, {"name": "email", "value": "'test@email.com'"}, {"name": "password", "value": "'admin'"}, {"name": "created_from_date", "value": "'1/1/2017'"}, {"name": "created_to_date", "value": "'11/15/2021'"}], "start": 1636975990990, "stop": 1636975992767, "uuid": "7b192852-1a91-488a-a279-65412227682b", "historyId": "f5fc24317b6493b04f7ef77ac1ee939f", "testCaseId": "2af8d2aec004e1e848e11a40fc206f76", "fullName": "Test_Cases.test_verify_product_review.TestVerifyProductReview#test_verify_product_review", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure', 'get_browser')"}, {"name": "parentSuite", "value": "Test_Cases"}, {"name": "suite", "value": "test_verify_product_review"}, {"name": "subSuite", "value": "TestVerifyProductReview"}, {"name": "host", "value": "EPINHYDW042A"}, {"name": "thread", "value": "24440-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Cases.test_verify_product_review"}]}